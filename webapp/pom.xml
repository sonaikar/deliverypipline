<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>no.bekk.bekkopen.cde</groupId>
		<artifactId>parent</artifactId>
		<version>0.9-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>webapp</artifactId>
	<name>Bekk Open: Jetty Embedded Web App</name>
	<packaging>jar</packaging>

	<dependencies>
		<!-- bekkopen -->
		<dependency>
			<groupId>no.bekk.bekkopen.cde</groupId>
			<artifactId>core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Jetty -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-api-2.1-glassfish</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1-glassfish</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>

		<!-- Commons -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<mainClass>no.bekk.bekkopen.cde.jetty.WebServerMain</mainClass>
					<systemProperties>
						<systemProperty>
							<key>config</key>
							<value>${project.build.testOutputDirectory}/webapp.properties</value>
						</systemProperty>
						<systemProperty>
							<key>secrets</key>
							<value>${project.build.testOutputDirectory}/secret.properties</value>
						</systemProperty>
						<systemProperty>
							<key>run.exploded</key>
							<value>true</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>assembly</id>
			<activation>
				<property>
					<name>!skipAssembly</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>appassembler-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<executions>
							<execution>
								<goals>
									<goal>assemble</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<extraJvmArguments>-Dconfig=webapp.properties -Dsecrets=../secret.properties -Dfile.encoding=UTF-8</extraJvmArguments>
							<programs>
								<program>
									<mainClass>no.bekk.bekkopen.cde.jetty.WebServerMain</mainClass>
									<name>webapp</name>
									<platforms>
										<platform>unix</platform>
									</platforms>
								</program>
							</programs>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
							<packagingExcludes>WEB-INF/classes/no/bekk/bekkopen/cde/jetty/WebServerMain.class,WEB-INF/classes/logback.xml</packagingExcludes>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<descriptors>
								<descriptor>assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>push-deploy</id>
			<activation>
				<property>
					<name>push-deploy</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<configuration>
							<target>
								<echo message="Deleting ${project.build.finalName}.zip from ${host} if it allready exists..." />
								<echo message="Running: ssh -tt -p${ssh-port} ${host.user}@${host} if [ -f ${project.build.finalName}.zip ]; then rm -f ${project.build.finalName}.zip ; fi" />
								<exec executable="ssh" failonerror="true">
									<arg value="-p${ssh-port}" />
									<arg value="${host.user}@${host}" />
									<arg value="if [ -f ${project.build.finalName}.zip ]; then rm -f ${project.build.finalName}.zip ; fi" />
								</exec>
								<echo message="Uploading deploy.sh to ${host}..." />
								<echo message="Running: scp -P${ssh-port} ../scripts/deploy.sh ${host.user}@${host}:${host.path}" />
								<exec executable="scp" failonerror="true">
									<arg value="-P${ssh-port}" />
									<arg value="../scripts/deploy.sh" />
									<arg value="${host.user}@${host}:" />
								</exec>
								<echo message="Uploading deploy.config to ${host}..." />
								<echo message="Running: scp -P${ssh-port} ../config/deploy.config ${host.user}@${host}:${host.path}" />
								<exec executable="scp" failonerror="true">
									<arg value="-P${ssh-port}" />
									<arg value="../config/deploy.config" />
									<arg value="${host.user}@${host}:" />
								</exec>
								<echo message="Uploading startup.sh to ${host}..." />
								<echo message="Running: scp -P${ssh-port} ../scripts/startup.sh ${host.user}@${host}:${host.path}" />
								<exec executable="scp" failonerror="true">
									<arg value="-P${ssh-port}" />
									<arg value="../scripts/startup.sh" />
									<arg value="${host.user}@${host}:" />
								</exec>
								<echo message="Uploading server_monitor.sh to ${host}..." />
								<echo message="Running: scp -P${ssh-port} ../scripts/server_monitor.sh ${host.user}@${host}:${host.path}" />
								<exec executable="scp" failonerror="true">
									<arg value="-P${ssh-port}" />
									<arg value="../scripts/server_monitor.sh" />
									<arg value="${host.user}@${host}:" />
								</exec>
								<echo message="Uploading ${project.build.finalName}.zip to ${host}..." />
								<echo message="Running: scp -P${ssh-port} target/${project.build.finalName}.zip ${host.user}@${host}:${host.path}" />
								<exec executable="scp" failonerror="true">
									<arg value="-P${ssh-port}" />
									<arg value="target/${project.build.finalName}.zip" />
									<arg value="${host.user}@${host}:" />
								</exec>
								<echo message="Deploying version ${project.version} to ${host}" />
								<echo message="Running: ssh -tt -p${ssh-port} ${host.user}@${host} nohup ./deploy.sh ${project.artifactId} ${project.version} &gt; /dev/null 2&gt;&amp;1 &lt;/dev/null" />
								<exec executable="ssh" failonerror="true">
									<arg value="-tt" />
									<arg value="-p${ssh-port}" />
									<arg value="${host.user}@${host}" />
									<arg value="nohup ./deploy.sh ${project.artifactId} ${project.version} &gt; /dev/null 2&gt;&amp;1 &lt;/dev/null" />
								</exec>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>pull-deploy</id>
			<activation>
				<property>
					<name>pull-deploy</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<executions>
							<execution>
								<phase>pre-clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<configuration>
							<target>
								<input message="What version do you want to deploy?:" addproperty="deploy.version" defaultvalue="${project.version}" />
								<echo message="Deploying ${deploy.version} on ${host}" />
								<echo message="Running: ssh -tt -p${ssh-port} ${host.user}@${host} nohup ./deploy.sh ${project.artifactId} ${deploy.version} &gt; /dev/null 2&gt;&amp;1 &lt;/dev/null" />
								<exec executable="ssh" failonerror="true">
									<arg value="-tt" />
									<arg value="-p${ssh-port}" />
									<arg value="${host.user}@${host}" />
									<arg value="nohup ./deploy.sh ${project.artifactId} ${deploy.version} &gt; /dev/null 2&gt;&amp;1 &lt;/dev/null" />
								</exec>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>rollback</id>
			<activation>
				<property>
					<name>rollback</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<executions>
							<execution>
								<phase>pre-clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<configuration>
							<target>
								<input message="What version do you want to roll back to?:" addproperty="version.rollback" defaultvalue="${project.version}" />
								<echo message="Rolling back to ${version.rollback} on ${host}" />
								<echo message="Running: ssh -tt -p${ssh-port} ${host.user}@${host} nohup ./deploy.sh ${project.artifactId} ${version.rollback}.backup &gt; /dev/null 2&gt;&amp;1 &lt;/dev/null" />
								<exec executable="ssh" failonerror="true">
									<arg value="-tt" />
									<arg value="-p${ssh-port}" />
									<arg value="${host.user}@${host}" />
									<arg value="nohup ./deploy.sh ${project.artifactId} ${version.rollback}.backup &gt; /dev/null 2&gt;&amp;1 &lt;/dev/null" />
								</exec>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
